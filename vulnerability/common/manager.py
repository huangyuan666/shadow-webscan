#encoding: utf-8

import logging

logger = logging.getLogger(__name__)

class Manager(object):
    PLUGINS = {}

    NIL = lambda *args, **kwargs: []

    def __init__(self):
        self.__plugins = {}
        for name, plugin in self.PLUGINS.items():
            self.__plugins[name] = plugin()

    def check(self, request):
        for name, plugin in self.__plugins.items():
            logger.debug('plugin: %s check %s', name, request)
            check = getattr(plugin, 'check', self.NIL)
            yield from check(request)

    def clear(self):
        for name, plugin in self.__plugins.items():
            plugin.clear()


def register(name):
    def wrapper(cls):
        Manager.PLUGINS[name] = cls
        return cls
    return wrapper

